{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter food name here: cookie\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieving http://www.recipepuppy.com/api?q=cookie\n",
      "Retrieved 2430 characters\n",
      "Food name: cookie\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter food name here: lasagna\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieving http://www.recipepuppy.com/api?q=lasagna\n",
      "Retrieved 2995 characters\n",
      "Food name: lasagna\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter food name here: lemonade\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieving http://www.recipepuppy.com/api?q=lemonade\n",
      "Retrieved 2149 characters\n",
      "Food name: lemonade\n"
     ]
    }
   ],
   "source": [
    "# This will print how many recipes are in the database for a specific food\n",
    "import urllib.request, urllib.parse, urllib.error\n",
    "import json\n",
    "import re\n",
    "\n",
    "serviceurl = 'http://www.recipepuppy.com/api'\n",
    "\n",
    "while True:\n",
    "    food_name = input('Enter food name here:')\n",
    "    if len(food_name) < 1: break\n",
    "\n",
    "    url = serviceurl + \"?\" + urllib.parse.urlencode(\n",
    "        {'q': food_name})\n",
    "\n",
    "    print('Retrieving', url)\n",
    "    uh = urllib.request.urlopen(url)\n",
    "    data = uh.read().decode()\n",
    "    print('Retrieved', len(data), 'characters')\n",
    "\n",
    "    try:\n",
    "        js = json.loads(data)\n",
    "    except:\n",
    "        js = None\n",
    "        print('none found')\n",
    "        \n",
    "    count = 0\n",
    "    for line in js: \n",
    "        if food_name in line:\n",
    "            print(line)\n",
    "            count+= 1\n",
    "       \n",
    "    print (\"Food name:\", food_name[0:])\n",
    "    \n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8 (full)",
   "language": "python",
   "name": "python3-3.8-ufrc"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
